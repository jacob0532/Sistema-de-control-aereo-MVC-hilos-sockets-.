/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista1;

import java.awt.Color;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.Socket;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author yeico
 */
public class ClienteInformacion extends javax.swing.JFrame implements Runnable{
    //Declaramos las variables necesarias para la conexion y comunicacion
    private Socket cliente;
    private DataInputStream in;
    private DataOutputStream out;
    //El puerto debe ser el mismo en el que escucha el servidor
    private int puerto = 2027;
    //Si estamos en nuestra misma maquina usamos localhost si no la ip de la maquina servidor
    private String host = "localhost";
    private String mensaje = "";
    public ClienteInformacion() {
        initComponents();
        rellenarPanel();
        try {
            cliente = new Socket(host,puerto);
            in = new DataInputStream(cliente.getInputStream());
            out = new DataOutputStream(cliente.getOutputStream());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    @Override
    public void run() {
        try{
            //Ciclo infinito que escucha por mensajes del servidor y los muestra en el panel
            while(true){
                this.setVisible(true);
                mensaje = in.readUTF();
                System.out.println(mensaje);
                if ("inicio".equals(mensaje)) {
                    this.enviarMsg("hola");
                }
                if ("adios".equals(mensaje)) {
                    this.enviarMsg("Como estas?"); 
                }
                mostrarInformacion();
                panelInformacion.updateUI();
                sleep(1000);
                
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    //Funcion sirve para enviar mensajes al servidor
    public void enviarMsg(String msg){
        try {
            out.writeUTF(msg);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public void rellenarPanel(){
        for (int i = 0; i < 20; i++) {
            JLabel var = new JLabel();
            var.setBackground(Color.YELLOW);
            var.setText(String.valueOf(i));
            var.setOpaque(true);
            var.setBounds(10, 70*i+10, 820, 50);
            panelInformacion.add(var);
        }
    }
    public void mostrarInformacion(){
        for (int i = 0; i < 20; i++) {
            if(panelInformacion.getComponent(i).getY()+10>500){
                panelInformacion.getComponent(i).setBounds(10,10, 820, 50);  
            }
            else{
                panelInformacion.getComponent(i).setBounds(10,panelInformacion.getComponent(i).getY()+70, 820, 50);  
            }
                     
        }
    
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelInformacion = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));
        jPanel1.setLayout(null);

        panelInformacion.setBackground(new java.awt.Color(255, 153, 0));
        panelInformacion.setPreferredSize(new java.awt.Dimension(500, 500));
        panelInformacion.setLayout(null);
        jPanel1.add(panelInformacion);
        panelInformacion.setBounds(80, 60, 840, 470);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ClienteInformacion cliente= new ClienteInformacion();
        Thread hilo = new Thread(cliente);
        hilo.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelInformacion;
    // End of variables declaration//GEN-END:variables
}
